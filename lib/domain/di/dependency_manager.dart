import 'package:get_it/get_it.dart';
import 'package:google_place/google_place.dart';
import 'package:puntossmart/domain/iterface/address.dart';
import 'package:puntossmart/domain/iterface/auth.dart';
import 'package:puntossmart/domain/iterface/banners.dart';
import 'package:puntossmart/domain/iterface/blogs.dart';
import 'package:puntossmart/domain/iterface/brands.dart';
import 'package:puntossmart/domain/iterface/categories.dart';
import 'package:puntossmart/domain/iterface/currencies.dart';
import 'package:puntossmart/domain/iterface/draw.dart';
import 'package:puntossmart/domain/iterface/gallery.dart';
import 'package:puntossmart/domain/iterface/notification.dart';
import 'package:puntossmart/domain/iterface/orders.dart';
import 'package:puntossmart/domain/iterface/parcel.dart';
import 'package:puntossmart/domain/iterface/payments.dart';
import 'package:puntossmart/domain/iterface/products.dart';
import 'package:puntossmart/domain/iterface/settings.dart';
import 'package:puntossmart/domain/iterface/shops.dart';
import 'package:puntossmart/domain/iterface/user.dart';
import 'package:puntossmart/infrastructure/repository/address_repository.dart';
import 'package:puntossmart/infrastructure/repository/auth_repository.dart';
import 'package:puntossmart/infrastructure/repository/banners_repository.dart';
import 'package:puntossmart/infrastructure/repository/blogs_repository.dart';
import 'package:puntossmart/infrastructure/repository/brands_repository.dart';
import 'package:puntossmart/infrastructure/repository/cart_repository.dart';
import 'package:puntossmart/infrastructure/repository/categories_repository.dart';
import 'package:puntossmart/infrastructure/repository/currencies_repository.dart';
import 'package:puntossmart/infrastructure/repository/draw_repository.dart';
import 'package:puntossmart/infrastructure/repository/gallery_repository.dart';
import 'package:puntossmart/infrastructure/repository/notification_repository.dart';
import 'package:puntossmart/infrastructure/repository/orders_repository.dart';
import 'package:puntossmart/infrastructure/repository/parcel_repository.dart';
import 'package:puntossmart/infrastructure/repository/payments_repository.dart';
import 'package:puntossmart/infrastructure/repository/products_repository.dart';
import 'package:puntossmart/infrastructure/repository/settings_repository.dart';
import 'package:puntossmart/infrastructure/repository/shops_repository.dart';
import 'package:puntossmart/infrastructure/repository/user_repository.dart';
import 'package:puntossmart/infrastructure/services/app_constants.dart';
import 'package:puntossmart/infrastructure/services/local_storage.dart';
import '../handlers/http_service.dart';
import '../iterface/cart.dart';

final GetIt getIt = GetIt.instance;

Future<void> setUpDependencies() async {
  getIt.registerLazySingleton<HttpService>(() => HttpService());
  getIt.registerSingleton<SettingsRepositoryFacade>(SettingsRepository());
  getIt.registerSingleton<AuthRepositoryFacade>(AuthRepository());
  getIt.registerSingleton<ProductsRepositoryFacade>(ProductsRepository());
  getIt.registerSingleton<ShopsRepositoryFacade>(ShopsRepository());
  getIt.registerSingleton<BrandsRepositoryFacade>(BrandsRepository());
  getIt.registerSingleton<GalleryRepositoryFacade>(GalleryRepository());
  getIt.registerSingleton<CategoriesRepositoryFacade>(CategoriesRepository());
  getIt.registerSingleton<CurrenciesRepositoryFacade>(CurrenciesRepository());
  getIt.registerSingleton<AddressRepositoryFacade>(AddressRepository());
  getIt.registerSingleton<BannersRepositoryFacade>(BannersRepository());
  getIt.registerSingleton<GooglePlace>(GooglePlace(AppConstants.googleApiKey));
  getIt.registerSingleton<PaymentsRepositoryFacade>(PaymentsRepository());
  getIt.registerSingleton<OrdersRepositoryFacade>(OrdersRepository());
  getIt.registerSingleton<UserRepositoryFacade>(UserRepository());
  getIt.registerSingleton<BlogsRepositoryFacade>(BlogsRepository());
  getIt.registerSingleton<CartRepositoryFacade>(CartRepository());
  getIt.registerSingleton<DrawRepositoryFacade>(DrawRepository());
  getIt.registerSingleton<ParcelRepositoryFacade>(ParcelRepository());
  getIt.registerSingleton<NotificationRepositoryFacade>(
      NotificationRepositoryImpl());
  getIt.registerSingleton<Map>(LocalStorage.getTranslations());
}

final notificationRepo = getIt.get<NotificationRepositoryFacade>();
final drawRepository = getIt.get<DrawRepositoryFacade>();
final settingsRepository = getIt.get<SettingsRepositoryFacade>();
final authRepository = getIt.get<AuthRepositoryFacade>();
final productsRepository = getIt.get<ProductsRepositoryFacade>();
final shopsRepository = getIt.get<ShopsRepositoryFacade>();
final brandsRepository = getIt.get<BrandsRepositoryFacade>();
final galleryRepository = getIt.get<GalleryRepositoryFacade>();
final categoriesRepository = getIt.get<CategoriesRepositoryFacade>();
final currenciesRepository = getIt.get<CurrenciesRepositoryFacade>();
final addressesRepository = getIt.get<AddressRepositoryFacade>();
final bannersRepository = getIt.get<BannersRepositoryFacade>();
final googlePlace = getIt.get<GooglePlace>();
final paymentsRepository = getIt.get<PaymentsRepositoryFacade>();
final ordersRepository = getIt.get<OrdersRepositoryFacade>();
final userRepository = getIt.get<UserRepositoryFacade>();
final blogsRepository = getIt.get<BlogsRepositoryFacade>();
final cartRepository = getIt.get<CartRepositoryFacade>();
final parcelRepository = getIt.get<ParcelRepositoryFacade>();
final translation = getIt.get<Map>();
